{"version":3,"sources":["components/DirEntry.js","components/NumberForm.js","services/numbers.js","App.js","index.js"],"names":["DirEntry","_ref","name","number","deleteEntry","react_default","a","createElement","onClick","NumberForm","newName","newNumber","addNumber","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","numbers","getAll","axios","get","then","response","data","create","newEntry","post","remove","id","delete","concat","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","preventDefault","state","persons","map","person","indexOf","alert","setState","entryObject","NumbersService","console","log","window","confirm","entryToDelete","find","p","filter","target","_this2","_this3","components_NumberForm","components_DirEntry","key","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7a13ff25.chunk.js","sourcesContent":["import React from 'react'\n\nconst DirEntry = ({ name, number, deleteEntry }) => {\n  return (\n    <tr><td>{name}</td><td>{number}</td><td><button onClick={deleteEntry}>Delete</button></td></tr>\n  )\n}\n\nexport default DirEntry","import React from 'react'\n\nconst NumberForm = ({ newName, newNumber, addNumber, handleNameChange, handleNumberChange }) => {\n  return (\n    <form onSubmit={addNumber}>\n      <div>\n        Name <br /><input\n          value={newName}\n          onChange={handleNameChange}\n        />\n      </div>\n      <div>\n        Number <br /><input\n          value={newNumber}\n          onChange={handleNumberChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default NumberForm","import axios from 'axios'\n\nconst baseURL = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseURL).then(response => response.data)\n}\n\nconst create = (newEntry) => {\n  return axios.post(baseURL, newEntry).then(response => response.data)\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseURL}/${id}`).then(response => response.data)\n}\n\nexport default {\n  getAll,\n  create,\n  remove\n}","import React from 'react';\nimport DirEntry from './components/DirEntry'\nimport NumberForm from './components/NumberForm'\nimport NumbersService from './services/numbers'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      persons: [],\n      newName: '',\n      newNumber: ''\n    }\n  }\n\n  componentDidMount() {\n    console.log('Did mount')\n\n    NumbersService\n      .getAll()\n      .then(response => {\n        console.log('Promise fulfilled')\n        this.setState({\n          persons: response\n        })\n      })\n  }\n\n  addNumber = (event) => {\n    event.preventDefault()\n\n    // If the directory already includes the name that user tries to add, prevent adding it.\n    if (this.state.persons.map(person => person.name).indexOf(this.state.newName) !== -1) {\n      alert(\"Name '\" + this.state.newName + \"' already exists in the phone directory and can't be added.\")\n\n      this.setState({\n        newName: ''\n      })\n    }\n    else if (this.state.newName === '' || this.state.newNumber === '') {\n      alert(\"Both fields need to be filled.\")\n    }\n    else {\n      const entryObject = {\n        name: this.state.newName,\n        number: this.state.newNumber\n      }\n\n      NumbersService\n        .create(entryObject)\n        .then(newEntry => {\n          this.setState({\n            persons: this.state.persons.concat(newEntry),\n            newName: '',\n            newNumber: ''\n          })\n        })\n    }\n  }\n\n  /* This method deleteNumber is not an event handler itself.\n  Instead, it is a factory that creates an event handler for each number entry. */\n  deleteEntry = (name) => {\n    return () => {\n      console.log(`Entry ${name} needs to be deleted`)\n\n      if (window.confirm(`Do you want to delete entry for ${name}?`)) {\n        const entryToDelete = this.state.persons.find(p => p.name === name)\n\n        NumbersService\n          .remove(entryToDelete.id)\n          .then(response => {\n            const persons = this.state.persons.filter(p => p.id !== entryToDelete.id)\n            this.setState({\n              persons: persons\n            })\n          })\n      }\n    }\n  }\n\n  handleNameChange = (event) => {\n    console.log(event.target.value)\n    this.setState({ newName: event.target.value })\n  }\n\n  handleNumberChange = (event) => {\n    console.log(event.target.value)\n    this.setState({ newNumber: event.target.value })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Phone Directory</h1>\n        <NumberForm\n          newName={this.state.newName}\n          newNumber={this.state.newNumber}\n          addNumber={this.addNumber}\n          handleNameChange={this.handleNameChange}\n          handleNumberChange={this.handleNumberChange}\n        />\n        <h2>Numbers</h2>\n        <table>\n          <tbody>\n            {this.state.persons.map(person =>\n              <DirEntry\n                key={person.name}\n                name={person.name}\n                number={person.number}\n                deleteEntry={this.deleteEntry(person.name)} />\n            )}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(< App />, document.getElementById('root'));"],"sourceRoot":""}